<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFo1wIDqJYUQ+aTooTlEWsFIs6hxGELi8AdxECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAmrZiwOpl/BEaFW6hKZTPcUkkL/Fok29hiBLOMZdyCrGG8UTRllCB0eXwACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACa9pKw6sZdsQpVz/EZ1R/xSVR/8WjTv/F4Ux/xl9Jv8bdRz/HW0R/x9l
        BvQeXwBWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIsW4ODK9pwQ+pYf8RoVf/EplM/xWRQf8WiTb/GIEs/xp5
        If8ccRb/HmkM/x9iA50RVQAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsW1yDq1m/RClXP8RnVH/FJVH/xWN
        PP8XhTH/GX0m/xt1HP8dbRH/HmYH2h5gACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        OP8WjDv/FY8+/xWQQP8UkkP/FJRG/xOXSf8SmUz/EZtO5A6aTioAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAE4QwDheFMckYgy//GIEr/xl+J/8ZeyT/Gngg/xt1HP8ccxn/HHAV/x1uEv8daw7/HmgK/xxl
        BloAAAAAAAAAAAAAAAAAAAAAAAAAAABmAAIbcBavG3Ma/xt2HP8aeB//Gnoi/xl8Jf8Zfij/GIEr/xiD
        Lv8XhTH/F4c0/xaJN/8Wizn/FY08/xWQP/8UkkL/FJRF/xOWSP8TmEv6EJdLdguYTAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABaDLnkYgi38GX8p/xl8Jf8aeiL/G3ce/xt0G/8cchf/HG8T/x1s
        EP8eagz/HmcJ/x5kBZ4AAAAAAAAAAAAAAAAAAAAAAAAAABhsERcccBXeHHMZ/xt1HP8adx7/Gnkh/xl7
        JP8Zfif/GIAq/xiCLf8YhDD/F4cz/xaJNv8Wizn/FY08/xWPPv8UkUH/FJNE/xOWR/8Sl0q+D5RHFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABN/KicYgCrpGX4n/xl7JP8aeCD/G3Yd/xtz
        Gf8ccBX/HW4S/x1rDv8eaAv/H2YH/x9iA9sZWgAHAAAAAAAAAAAAAAAAAAAAABlrEEAccBT4HHIY/xt0
        Gv8bdh3/Gngg/xp6I/8ZfSb/GYAp/xiCLP8Ygy//F4Uy/xeINf8Wijj/Fow7/xWOPv8VkEH/FJND/xOU
        RekRlkc6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABB9JgMWfCeRGX0m/xp5
        Iv8bdx7/G3Qb/xxyF/8cbxT/HWwQ/x5qDf8eZwn/H2UG/x9iAvMeYAAnAAAAAAAAAAAAAAAAAAAAABxs
        EIQcbxT/HHEX/xt0Gv8bdh3/Gngf/xp6Iv8ZfCX/GX8o/xiBK/8Ygy7/F4Ux/xeHNP8Wijf/Fow6/xWO
        Pf8VkED/FJJC9RGRQV4QlEYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        ///8AwAAAAf///4DAAAAP////gMAAAD/////AwAAB//////DAAA//////+MAAP//////8wAA////////
        AAA=
</value>
  </data>
</root>